services:
  nginx:
    build:
      context: ./nginx
      target: dev
    container_name: 'nginx'
    restart: always
    ports:
      - "443:443"
    volumes:
      - ./nginx/conf:/etc/nginx/conf.d
    environment:
      - PROM_USER=${USER_NAME}
      - PROM_PASS_FILE=/run/secrets/prometheus_password
    networks:
      - trancendence-network
    secrets:
      - prometheus_password
    # depends_on:
    #   - auth-service

  auth-service:
    build: ./auth-service
    ports:
      - "5000:5000"
  
  prometheus:
    image: prom/prometheus:v2.53.4
    container_name: 'prometheus'
    user: root
    restart: always
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - trancendence-network
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --web.route-prefix=/
      - --web.external-url=http://localhost/monitoring/prometheus

  grafana:
    image: grafana/grafana
    container_name: 'grafana'
    networks:
      - trancendence-network
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
    
  node_exporter:
    image: quay.io/prometheus/node-exporter:v1.9.1
    container_name: 'node-exporter'
    restart: always
    command: "--path.rootfs=/host"
    pid: host
    volumes:
      - /:/host:ro,rslave
    depends_on:
      - prometheus
    networks:
      - trancendence-network
    
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.52.1
    container_name: cadvisor
    restart: always
    ports:
      - 8080:8080
    volumes:
      - /:/rootfs:ro
      - /run:/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    depends_on:
      - prometheus
    networks:
      - trancendence-network
    devices:
      - /dev/kmsg
    privileged: true

secrets:
  grafana_admin_password:
    file: ${SECRETS_DIR}/grafana.txt
  prometheus_password:
    file: ${SECRETS_DIR}/prometheus.txt

networks:
  trancendence-network:
    driver: bridge

volumes:
  grafana_data:
    driver: local
    driver_opts:
      type: none
      device: "${GRAFANA_DATA_DIR}"
      o: bind
    